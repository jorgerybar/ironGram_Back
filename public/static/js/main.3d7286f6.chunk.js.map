{"version":3,"sources":["services/Service.js","components/Cadav.jsx","components/List.jsx","components/Single.jsx","components/New.jsx","components/auth/Signup.js","components/auth/Login.js","Routes.jsx","App.jsx","serviceWorker.js","index.js"],"names":["url","addLine","urlEnd","line","axios","post","then","res","console","log","Cadav","state","title","reveal","newlines","onSubmit","e","preventDefault","_this","newLine","text","target","childNodes","value","color","randomColor","writer","push","setState","props","data","r","catch","o","Math","round","random","drawLine","l","i","react_default","a","createElement","className","key","style","checkReveal","_this$props$data","lines","apply","Object","toConsumableArray","map","width","src","alt","length","id","maxLength","placeholder","type","_this$props$data2","this","Component","List","_this2","get","cd","components_Cadav","Single","name","getCadavData","match","params","New","newCadav","cadav","history","onChange","field","Signup","signup","username","loading","createUser","password","password2","toastr","error","user","success","_this$state","margin","padding","input","email","es_button","htmlType","Login","auth","login","localStorage","setItem","JSON","stringify","token","Routes","Switch","Route","exact","path","component","App","src_Routes","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d7286f6.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst url = 'https://cadavr-app.herokuapp.com/cadav/'\n\nexport const getCadavData = (name) => {\n  console.log('using getCadavData service')\n  return axios.get(url + name)\n  .then(res=>{\n      console.log('Got Some sort of response')\n      console.log(res.data[0])\n      return res.data[0]\n  })\n  .catch(e=>e)\n\n // return testCadav;\n}\n\nexport const getAllCadavs = () => {\n  return axios.get(url+'list')\n    .then( res => {\n      console.log('Got all cadavs')\n      return res.data\n    })\n}\n\nexport const addLine = (urlEnd,line) => {\n  return axios.post(url+urlEnd, line)\n    .then(res => {\n      console.log('Added new Line')\n      return res;\n    })\n}\n\n// const testCadav = {\n//   lines: [\n//   {text: 'Alla en el fondo del mar había un castido encantado', color: '#ef2e60', writer: 'Tom'},\n//   {text: 'En el castillo había una princesa llamada Rita',color: '#fdc847', writer: 'Jonnny'},\n//   {text: 'A Rita le gustaba escaparse y subirse a los árboles. Un día ',color: '#36b980', writer: 'Silv123'},\n//   {text: 'Rita se subió a una palmera y conocío a un mono llamado Emilio',color: '#ee4d30', writer: 'DJ'},\n//   {text: 'Emilio quería casarse con Rita pero Rita le dijo que no podía por que el no era humano',color: 'Diane', writer: 'Tom'},\n//   {text: 'Rita se bajó del arbol y fue a una choza. y Ahí conocio a Pepe',color: '#531a4b', writer: 'Pedrooo'},\n//   {text: 'Rita y Pepe se casaron y tuvieron un lindo hijo que parecia sapo. ', color: '#981f26', writer: 'AllanBoy'},\n// ],\n//   title: 'El Sapo',\n//   urlEnd: url + 'sapo'\n// }\n\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport {addLine} from '../services/Service'\n\n\nclass Cadav extends Component {\n\n  state = {\n    title: 'Flowerpot',\n    reveal: false,\n    newlines: [],\n    urlEnd: null\n  }\n\n  componentDidMount(){\n    const {lines, title, urlEnd} = this.props.data\n    this.setState({lines, title, urlEnd})\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault()\n     const {newlines} = this.state\n    // //add the line to the list\n    const newLine = {text: e.target.childNodes[1].value, \n                    color: this.randomColor(), \n                    writer:  e.target.childNodes[0].value }\n    newlines.push(newLine)\n    // //update the state and reveal\n    this.setState({reveal: true, newlines})\n    addLine(this.props.data.urlEnd,newLine)\n     .then((r)=>{console.log('Post Successful' + r)})\n     .catch((e)=>{console.log(e)})\n  }\n\n  //CHOOSE A RANDOM COLOR FOR LINE\n  randomColor = () =>{\n    var colors = [\n    '#ef2e60',\n    '#fdc847',\n    '#36b980',\n    '#ee4d30',\n    '#531a4b',\n    '#981f26']\n\n    var o = Math.round, r = Math.random\n    return colors[o(r()*6)]\n    // return 'rgba(' + o(r()*s*2 ) + ',' + o(r()*s ) + ',' + o(r()*s) + ',' + 1 + ')';\n  }\n\n  drawLine = (l,i) => {\n    return (\n    <div className=\"cadav-line\" key={i}>\n        <p className=\"cadav-line-writer\">{l.writer}</p>\n        <span style={{color: l.color}} className=\"cadav-line-txt\">\n            {l.text}\n        </span>\n    </div>)\n  }\n\n  //REVEAL LINES AFTER USER CONTRIBUTES\n checkReveal  = () =>{\n  const {title, lines} = this.props.data\n  const reveal = this.state.reveal\n\n  if(!title || !lines)\n    return;\n\n  lines.push(...this.state.newlines)\n\n\n  if (reveal)\n   return (\n     <div >\n      <h1 className=\"cadav-title\">{title}</h1>\n      {lines.map((l,i)=>this.drawLine(l, i))}\n      <div className=\"sharethis-inline-share-buttons\"></div>\n      <img className=\"cadav-share\" width='100px' src=\"buttons.png\" alt=\"\"/>\n      </div>\n   )\n   else \n    return (\n      <div>\n      <h1 className=\"cadav-title\">{title}</h1>\n      {console.log(lines)}\n      {this.drawLine(lines[lines.length-1])}\n      <form className=\"cadav-form\" onSubmit={this.onSubmit}>\n      <input id=\"cadav-input-writer\" maxLength=\"10\" placeholder='Mi nombre es..' type=\"text\"/>\n        <input id=\"cadav-input-line\" maxLength=\"200\" placeholder='Mi linea genial' type=\"text\"/>\n        <input className=\"cadav-btn\" type=\"submit\" value=\"Add\"/>\n      </form>\n      </div>\n    )\n \n }\n\n  render() {\n\n    console.log('Render Cadav Title ' + this.state.title)\n\n    return (\n      <div className=\"cadav\">\n        {this.checkReveal()}\n      </div>\n    );\n  }\n}\n\nexport default Cadav;\n","import React, {Component} from 'react'\nimport Cadav from './Cadav'\nimport {getAllCadavs} from '../services/Service'\n\n\n class List extends Component {\n\n\n  state = {\n    data: []\n  }\n\n  componentWillMount(){\n    // const {name} = this.props.match.params\n    // let data = getCadavs(name)\n    // this.setState({data})\n\n    getAllCadavs() //esto es un servicio\n    .then(data=>{\n        this.setState({data})\n    })\n    .catch(e=>console.log(e))\n  }\n\n  render(){\n    const {data} = this.state\n    return (\n      <div className=\"list\">\n       {data.map((cd, i)=><Cadav data={cd} key={i}/>) }\n      </div>\n    )\n  }\n\n }\n\n export default List","import React, {Component} from 'react'\nimport Cadav from './Cadav'\nimport {getCadavData} from '../services/Service'\n\nclass Single extends Component{\n\n  state = {\n    data: []\n  }\n\n  componentWillMount(){\n    const {name} = this.props.match.params\n    // let data = getCadavData(name)\n    // this.setState({data})\n\n    getCadavData(name) //esto es un servicio\n    .then(data=>{\n        this.setState({data})\n        console.log('Got Data from Axios' + this.state.data.title)\n    })\n    .catch(e=>console.log(e))\n  }\n\n  render(){\n    const {data} = this.state\n    console.log(' Render Single Data' + data.title)\n    return(\n      <div>\n        <Cadav data={data}/>\n      </div>\n    )\n  }\n}\n\nexport default Single","import React,{Component} from 'react'\nimport axios from 'axios'\nconst url = 'https://cadavr-app.herokuapp.com/cadav/new'\n\nclass New extends Component {\n\n  state = {\n    newCadav: {}\n\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {newCadav} = this.state\n    axios.post(url, newCadav )\n      .then((cadav)=>{\n        console.log(cadav.urlEnd)\n        this.props.history.push(newCadav.title) //fix this hack with cadav.urlEnd\n        })\n      .catch((e)=>{console.log(e)})\n  }\n\n  onChange = (e) => {\n    const field = e.target.name\n    const value = e.target.value\n    const {newCadav} = this.state\n    newCadav[field] = value\n    this.setState({newCadav})\n    console.log(this.state.newCadav)\n}\n\n  render(){\n    return(\n      <div>\n        <form className='new-form' onSubmit = {this.onSubmit}>\n          <input onChange = {this.onChange} placeholder=\"Nombre del Cadaver\" name=\"title\" type=\"text\"/>\n          <input onChange = {this.onChange} placeholder=\"Primera linea\" name=\"text\" type=\"text\"/>\n          <input onChange = {this.onChange} placeholder=\"Escritor\" name=\"writer\" type=\"text\"/>\n          <input type=\"submit\" value=\"Crear Nuevo\"/>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default New\n","import React, {Component} from 'react'\nimport { Input, Button } from 'antd'\nimport toastr from 'toastr'\nimport axios from 'axios'\n\n\nclass Signup extends Component{\n\n    state = {\n        signup:{username:\"pollollon\"},\n        loading:false\n    }\n\n    onChange = (e) => {\n        const field = e.target.name\n        const value = e.target.value\n        const {signup} = this.state\n        signup[field] = value\n        this.setState({signup})\n    }\n\n    createUser = (e) => {\n        e.preventDefault()\n        const {signup} = this.state\n        if(signup.password !== signup.password2) {\n            return toastr.error('Escribe bien hijo!')\n        }\n\n        axios.post('https://cadavr-app.herokuapp.com/auth/signup', signup)\n        .then(user=>{\n            console.log(user)\n            toastr.success(\"hey! lo lograte!\")\n        })\n        .catch(e=>toastr.error(\"No pitufa\"))\n    }\n\n    render(){\n        const {signup, loading} = this.state\n        return(\n            <form onSubmit={this.createUser} style={{width:600, margin:\"0 auto\", padding:20}}>\n                <h2>Date de alta mijo</h2>\n                <p>\n                    <Input \n                        name=\"username\"\n                        type=\"text\"\n                        onChange={this.onChange}\n                        value={signup.username}\n                        placeholder=\"Tu nombre de usuario\" \n                    />\n                    \n                </p>\n                <p>\n                <Input \n                    name=\"email\"\n                    type=\"email\"\n                    onChange={this.onChange}\n                    value={signup.email}\n                    placeholder=\"Tu correo\" \n                    />    \n                </p> \n                <p>\n                <Input \n                    name=\"password\"\n                    type=\"password\"\n                    onChange={this.onChange}\n                    value={signup.password}\n                    placeholder=\"Tu Password\" \n                    />    \n                </p>  \n                <p>\n                <Input \n                    name=\"password2\"\n                    type=\"password\"\n                    onChange={this.onChange}\n                    value={signup.password2}\n                    placeholder=\"Repite tu Password\" \n                    />    \n                </p>   \n                <Button loading={loading} type=\"primary\" htmlType=\"submit\" >Registrarme</Button>\n            </form>\n        )\n    }\n}\n\nexport default Signup","import React, {Component} from 'react'\nimport {Input, Button} from 'antd'\nimport axios from 'axios'\nimport toastr from 'toastr'\n\nconst url = 'https://cadavr-app.herokuapp.com/auth/login'\n\nclass Login extends Component{\n\n    state = {\n        auth:{},\n        loading:false\n    }\n\n    login = (e) => {\n        this.setState({loading:true})\n        e.preventDefault()\n        const {auth} = this.state\n        axios.post(url, auth)\n        .then(res=>{\n            console.log(res)\n            toastr.success(\"Te logueate!\")\n            localStorage.setItem('user', JSON.stringify(res.data.user))\n            localStorage.setItem('token', res.data.token)\n            this.setState({loading:false})\n            const bonito = this.props.history\n            bonito.push('/')\n\n        })\n        .catch(e=>{\n            toastr.error(\"no quiero tu cochinada\")\n            this.setState({loading:false})\n            \n        })\n    }\n\n    onChange = (e) => {\n        const field = e.target.name\n        const value = e.target.value\n        const {auth} = this.state\n        auth[field] = value\n        this.setState({auth})\n    }\n\n    render(){\n        const {auth, loading} = this.state\n        return(\n            <form onSubmit={this.login} style={{width:600, margin:\"0 auto\", padding:20}}>\n                <h2>Inicia sesión mijo</h2>\n                <p>\n                <Input \n                    name=\"email\"\n                    type=\"email\"\n                    onChange={this.onChange}\n                    value={auth.email}\n                    placeholder=\"Tu correo\" \n                    />    \n                </p> \n                <p>\n                <Input \n                    name=\"password\"\n                    type=\"password\"\n                    onChange={this.onChange}\n                    value={auth.password}\n                    placeholder=\"Tu Password\" \n                    />    \n                </p>   \n                <Button loading={loading} type=\"primary\" htmlType=\"submit\" >Inicia sesión</Button>\n            </form>\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport List from './components/List'\nimport Single from './components/Single'\nimport New from './components/New'\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\n\nconst Routes=()=>{\n  return (\n    <Switch>\n      <Route exact path=\"/signup\" component={Signup} />\n      <Route exact path=\"/login\" component={Login} />      \n      <Route exact path=\"/new\" component={New} />\n      <Route path=\"/list\" component={List} />\n      <Route path=\"/:name\" component={Single} />\n    </Switch>\n  )\n\n}\n\nexport default Routes","import React, { Component } from 'react';\nimport './App.css';\nimport Routes from './Routes'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Routes/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css'\nimport 'toastr/build/toastr.css'\n\nimport {BrowserRouter} from 'react-router-dom'\nconst WithRouter = () => <BrowserRouter><App/></BrowserRouter>\n\nReactDOM.render(<WithRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}